<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.eclipse.paho</groupId>
	<artifactId>paho.javascript</artifactId>
	<packaging>pom</packaging>
	<version>${paho.version}</version>
	<url>http://www.eclipse.org/paho</url>
	<licenses>
		<license>
			<name>Eclipse Public License - Version 1.0</name>
			<url>http://www.eclipse.org/org/documents/epl-v10.php</url>
		</license>
	</licenses>
	<properties>
		<paho.version>1.0.3</paho.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<build.level>${maven.build.timestamp}</build.level>
		<download.location>/home/data/httpd/download.eclipse.org/paho/releases/${paho.version}</download.location>
		<deployfile.name>${project.artifactId}-${paho.version}</deployfile.name>
	</properties>
	<scm>
		<url>http://git.eclipse.org/c/paho/org.eclipse.paho.mqtt.javascript.git</url>
		<connection>scm:git://git.eclipse.org/gitroot/paho/org.eclipse.paho.mqtt.javascript.git</connection>
	</scm>

	<build>
		<defaultGoal>process-resources</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>templating-maven-plugin</artifactId>
				<version>1.0-alpha-3</version>
				<executions>
					<execution>
						<id>filter-tests</id>
						<goals>
							<goal>filter-test-sources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
		      <groupId>com.samaxes.maven</groupId>
		      <artifactId>minify-maven-plugin</artifactId>
		      <version>1.7.4</version>
		      <executions>
		        <execution>
		          <id>default-minify</id>
				  <phase>process-sources</phase>
		          <configuration>
		            <charset>UTF-8</charset>
					<webappSourceDir>${basedir}/</webappSourceDir>
					<jsSourceDir>src/</jsSourceDir>
					<jsSourceFiles>
				    	<jsSourceFile>paho-mqtt.js</jsSourceFile>
				 	</jsSourceFiles>
				 	<jsFinalFile>paho-mqtt.js</jsFinalFile>
				 	<jsTargetDir>target</jsTargetDir>
				 	<webappTargetDir>${basedir}</webappTargetDir>
		            <jsEngine>CLOSURE</jsEngine>
					<closureLanguage>ECMASCRIPT5</closureLanguage>
		          </configuration>
		          <goals>
		            <goal>minify</goal>
		          </goals>
		        </execution>
		      </executions>
		    </plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<id>generate-js-output</id>
						<phase>process-sources</phase>
						<configuration>
							<tasks>
								<copy file="src/paho-mqtt.js" toFile="target/paho-mqtt.js">
									<filterset>
										<filter token="VERSION" value="${project.version}"/>
										<filter token="BUILDLEVEL" value="${build.level}"/>
									</filterset>
								</copy>
								<copy file="target/paho-mqtt.min.js" toFile="target/paho-mqtt-min-2.js">
									<filterset>
										<filter token="VERSION" value="${project.version}"/>
										<filter token="BUILDLEVEL" value="${build.level}"/>
									</filterset>
								</copy>
								<concat destfile="target/paho-mqtt-min.js">
									<fileset file="src/header.txt" />
									<fileset file="target/paho-mqtt-min-2.js" />
								</concat>
								<delete file="target/paho-mqtt-min-2.js"/>
								<delete file="target/paho-mqtt.min.js"/>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.github.searls</groupId>
				<artifactId>jasmine-maven-plugin</artifactId>
				<version>1.3.1.2</version>
				<configuration>
					<jsSrcDir>${basedir}/target/src</jsSrcDir>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>templating-maven-plugin</artifactId>
				<version>1.0-alpha-3</version>
				<executions>
					<execution>
						<id>filter-tests</id>
						<goals>
							<goal>filter-test-sources</goal>
						</goals>
						<configuration>
							<testSourceDirectory>${basedir}/src/test</testSourceDirectory>
							<testOutputDirectory>${basedir}/target/test</testOutputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptor>src/assembly/package.xml</descriptor>
					<appendAssemblyId>false</appendAssemblyId>
					<finalName>${deployfile.name}</finalName>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>default-install</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>deploy</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${download.location}</outputDirectory>
							<resources>
								<resource>
									<directory>target</directory>
									<includes>
										<include>${deployfile.name}.zip</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<id>set-cache</id>
						<phase>compile</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>config</argument>
								<argument>set</argument>
								<argument>cache</argument>
								<argument>./.npm</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>install-modules</id>
						<phase>compile</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>test</id>
						<phase>test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>node_modules/jasmine-node/bin/jasmine-node</executable>
							<arguments>
								<argument>--verbose</argument>
								<argument>--forceexit</argument>
								<argument>target/test</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>jshint</id>
						<phase>compile</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>node_modules/jshint/bin/jshint</executable>
							<arguments>
								<argument>src/paho-mqtt.js</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>install-jsdoc-modules</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>install</argument>
								<argument>jsdoc</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>jsdoc</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>node</executable>
							<arguments>
								<argument>node_modules/jsdoc/jsdoc.js</argument>
								<argument>target/paho-mqtt.js</argument>
								<argument>-d</argument>
								<argument>target/docs</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
